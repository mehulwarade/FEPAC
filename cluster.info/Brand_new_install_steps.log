###############################
####                         ##
####   Written in VS Code    ##
####                         ##
###############################

#Install fresh dietpi using balenetcher on sd card

=> [ OPTIONAL ] Change the hdmi output resolution (boot/config.txt)

framebuffer_width=640
framebuffer_height=480

#Copy custom_files/* to a convinient folder (here: boot/user_custom_files)

#Eject sd card from laptop and put into RPi3B+

=> [ NOTE ] If its stuck in boot loop check the power source and change if needed.
=> [ NOTE ] You can ssh or use keyboard with dietpi
=> ssh { dietpi@ip and su to enter root } or { ssh root@ip }
=> [ NOTE ] If needed plug ethernet cable

================ Dietpi config =================
#Complete the basic startup-config (setting global passwords, opting out of data cpllection, disabling serial putput)

# [ DIETPI-CONFIG >> SECURITY ]    
    Change hostname (ex. boot) >> Reboot  OR =>
    cd /boot/dietpi/func/ => sudo ./change_hostname NewHostName

# DIETPI-SOFTWARE >> SSH Server >> OpenSSH
# DIETPI-SOFTWARE >> Log system >> Full
# DIETPI-SOFTWARE >> Install software >> reboot

================ Node ( Basic ) config ============

#Login as root
su

#Add User pi
adduser pi

#Add pi to sudoers list: usermod -aG sudo yourusername
usermod -aG sudo pi

=> [ OPTIONAL ] Delete basic user dietpi
sudo userdel dietpi && sudo rm -r /home/dietpi

#Static IP: 
sudo nano /etc/network/interfaces 

        # Ethernet
        allow-hotplug eth0
        iface eth0 inet static
        address 192.168.50.100  <=
        netmask 255.255.255.0
        gateway 192.168.50.1    <=
        #dns-nameservers 9.9.9.9 149.112.112.112

OR =>
sudo dietpi-config >> network >> ethernet >> change mode

#reboot and check if the static ip is set

================= Node (Network boot) Setup =================
=> [ REFERENCE ] https://www.raspberrypi.org/documentation/hardware/raspberrypi/bootmodes/net_tutorial.md 
=> [ REFERENCE ] https://raspberrypi.stackexchange.com/a/87361 

#Make nfs folder
sudo mkdir -p /nfs/client

#Install rsync utility to get backup of system
sudo apt install rsync

#Get a backup of whole root filesystem excluding the nfs folder (we don't want it to stick in infinite loop)
sudo rsync -xa --progress --exclude /nfs / /nfs/client      <=  Works when you have a clean install

OR

sudo rsync -xa --progress --exclude /nfs --exclude /tftpboot / /nfs/client      <=  Works when you are getting backup after alterations (ex. tftpboot folder)

#After rsync copy dietpi folder from /boot and /run into nfs/client/boot and nfs/client/run
sudo cp -r /boot/dietpi /nfs/client/boot/dietpi
sudo cp -r /run/dietpi /nfs/client/run/dietpi

#Regenerate SSH host keys on the client filesystem by chrooting into it
        cd /nfs/client
        sudo mount --bind /dev dev
        sudo mount --bind /sys sys
        sudo mount --bind /proc proc
        sudo chroot .
        rm /etc/ssh/ssh_host_*
        dpkg-reconfigure openssh-server
        exit
        sudo umount dev sys proc

OR =>
        sudo cp /boot/user_custom_files/chroot.sh /nfs/client/chroot.sh
        sudo sh /nfs/client/chroot.sh
        rm /etc/ssh/ssh_host_*
        dpkg-reconfigure openssh-server

=> [ ERROR ] sudo: no tty present and no askpass program specified
  => [ REFERENCE ] https://stackoverflow.com/a/39553081
  => [ SOLUTION ] use 'sudo -S yourcommand' and then it should work


=> [ NOTE ] When u mount and chroot check you have IP address there. It should be there. Copy boot/dietpi.txt file if needed.

=> [ ERROR after chroot ] sed: can't read /boot/dietpi.txt: No such file or directory
  => copy /boot/dietpi.txt to /nfs/client/boot/dietpi.txt
  => sudo cp /boot/dietpi.txt /nfs/client/boot/dietpi.txt


#Change the hostname and static IP address of the chorooted one using dietpi-config. Reboot, exit, umount, chroot, and check if the IP address is changed or not. If yes then you r all ready

sudo sh /nfs/client/chroot.sh

dietpi-config >> Security >> Change hostname >> client
exit and reboot (simulating reboot in chroot ignores the request)

# IMPORTANT :- Need to set a arbitrary static IP address else the boot will be stuck on "Waiting for valid network"
{
dietpi-config >> Network >> ethernet >> Change mode (static) >> Static IP >> 192.168.50.120  [ Change static gateway if wrong ]
Apply all networking canges
}

OR (while in chroot) =>

#Static IP: 
sudo nano /etc/network/interfaces 

        # Ethernet
        allow-hotplug eth0
        iface eth0 inet static
        address 192.168.50.120  <=
        netmask 255.255.255.0
        gateway 192.168.50.1    <=
        #dns-nameservers 9.9.9.9 149.112.112.112

[ OPTIONAL ] Purge wifi related packages
[ NOTE ] If it takes too long, its normal. Just close the window or reboot and ssh into it again. Chroot does give out some error and hence long wait times.

#Find the settings of your local network. You need to find the address of your router (or gateway)
ip route | awk '/default/ {print $3}'    <= router /gateway (output: 192.168.50.1)
ip -4 addr show dev eth0 | grep inet     <= IP info (output: inet 192.168.50.100/24 brd 192.168.50.255 scope global eth0)

;Info example:
;IP: 192.168.50.100
;broadcast: 192.168.50.255
;DNS: 192.168.50.1
;Gateway/ Router: 192.168.50.1

cat /etc/resolv.conf <= SHould show your gateway/router. If it doesn't then 
sudo nano /etc/resolv.conf >> ADD nameserver 192.168.50.1

#Now you won't have working DNS, so you'll need to add the server you noted down before to systemd/resolved.conf
sudo nano /etc/systemd/resolved.conf [Update in the chroot as well]

[Resolve]
DNS=192.168.50.1
;FallbackDNS=

#Enable systemd-networkd and then reboot for the changes to take effect:
sudo systemctl enable systemd-networkd
sudo reboot

[ OPTIONAL ] Start tcpdump so you can search for DHCP packets from the client Raspberry Pi
[ OPTIONAL ] =>sudo apt install tcpdump
[ OPTIONAL ] =>sudo systemctl enable dnsmasq
[ OPTIONAL ] =>sudo tcpdump -i eth0 port bootpc

[ OPTIONAL ] =>;Connect the client Raspberry Pi to your network and power it on. Check that the LEDs illuminate on the client after around 10 seconds, then you should get a packet from the client "DHCP/BOOTP, Request from ..."

[ OPTIONAL ] [ OUTPUT ] => IP 0.0.0.0.bootpc > 255.255.255.255.bootps: BOOTP/DHCP, Request from b8:27:eb...

#Modify the dnsmasq configuration to enable DHCP to reply to the device
[ REFERENCE ] https://www.raspberrypi.org/forums/viewtopic.php?t=192743
sudo apt install dnsmasq
echo | sudo tee /etc/dnsmasq.conf
sudo nano /etc/dnsmasq.conf <= Copy following content or copy the dnsmasq.conf file from /boot/user_custom_files to /etc/dnsmasq.conf
        
        #
        #/etc/dnsmasq.conf
        #

        port=0
        #dhcp-range=192.168.50.255,proxy
        dhcp-range=eth0, 192.168.50.200, 192.168.50.220, 24h

        #STATIC IP ADDRESS TO EACH UNIQUE MAC
        dhcp-host=b8:27:eb:d1:40:83,master,192.168.50.220
        dhcp-host=b8:27:eb:07:8e:98,slave1,192.168.50.210
        dhcp-host=b8:27:eb:5a:2b:32,slave2,192.168.50.211

        dhcp-script=/nfs/dnsmasq.conf.save.hosts.auto.sh


        log-dhcp
        enable-tftp
        tftp-root=/tftpboot
        #tftp-unique-root=mac
        pxe-service=0,"Raspberry Pi Boot"

#Copy the dhcp-script from customer files to correct location
sudo cp /boot/user_custom_files/dnsmasq.conf.save.hosts.auto.sh /nfs/
[ REQUIRED ] Remove the comments from the file at the top. It should start with #!/...

#Create hardlink for /etc/hosts in /nfs/client/etc/hosts so that it updates automatically
sudo rm /nfs/client/etc/hosts
sudo ln /etc/hosts /nfs/client/etc/hosts

#Creating a /tftpboot directory for network boot
sudo mkdir /tftpboot
sudo chmod 777 /tftpboot
sudo systemctl enable dnsmasq.service
sudo systemctl restart dnsmasq.service


# If booting by MAC-addresses REF:[https://raspberrypi.stackexchange.com/a/87361]
# The name of the folder in tftpboot shoul be the MAC address as b8-27-eb-d3-85-78

#Copying the whole boot folder into tftpboot
sudo cp -r /boot/* /tftpboot

#Restart services
sudo systemctl restart dnsmasq  
OR =>
sudo cp /boot/user_custom_files/restartservices.sh ~/restartservices.sh
sh ~/restartservices.sh  <= Some errors might come. Just ignore.

#Final check
sudo tail -F /var/log/daemon.log
;and connect a client to the same network. you should see the rpi booting but not toally. Time to setup root filesystem using NFS

================ Setting up NFS =================

sudo apt install nfs-kernel-server
echo "/nfs/client *(rw,sync,no_subtree_check,no_root_squash)" | sudo tee -a /etc/exports
echo "/tftpboot *(rw,sync,no_subtree_check,no_root_squash)" | sudo tee -a /etc/exports

#Restart RPC-Bind and the NFS server in order to have them detect the new files
sudo systemctl enable rpcbind
sudo systemctl restart rpcbind
sudo systemctl enable nfs-kernel-server
sudo systemctl restart nfs-kernel-server

OR =>
sh ~/restartservices.sh

#Edit /tftpboot/cmdline.txt and from root= onwards, and replace it with:
root=/dev/nfs nfsroot=ip_boot:/nfs/client,vers=4.1,proto=tcp rw ip=dhcp rootwait elevator=deadline

[ EXAMPLE ] root=/dev/nfs nfsroot=192.168.50.100:/nfs/client,vers=4.1,proto=tcp rw ip=dhcp rootwait elevator=deadline

#Edit /nfs/client/etc/fstab and remove the /dev/mmcblk0p1 and p2 lines (only proc should be left). Then, add the boot partition back in
sudo nano /nfs/client/etc/fstab

[ IMPORTANT ] remove (or comment) all the partitions from physical drive and add the following:
[ REFERENCE ] https://raspberrypi.stackexchange.com/a/76010 
[ REFERENCE ] https://kitson-consulting.co.uk/blog/building-linux-cluster-using-pxe-dhcp-tftp-and-nfs

echo "proc /proc proc defaults 0 0" | sudo tee -a /nfs/client/etc/fstab
echo "192.168.50.100:/tftpboot /boot nfs defaults,vers=4.1,proto=tcp 0 0" | sudo tee -a /nfs/client/etc/fstab

#Finally restart all services and try to boot client RPi
sh ~/restartservices.sh

#Final check
sudo tail -F /var/log/daemon.log
;and connect a client to the same network. you should see the rpi booting.


[ IMPORTANT ] Give the first boot fair amount of time. It will work. 

[ ISSUE SOLVED ]: No internet on individual nodes: 
        Need to add the default gateway by running following commands. If 'route' command does not exist install using "sudo apt install net-tools"

        sudo ip route del 0/0 dev eth0 &> /dev/null
        a=`route | awk "/${wlan}/"'{print $5+1;exit}'`
        sudo route add -net default gw 192.168.50.1 netmask 0.0.0.0 dev eth0 metric $a
                                        √ your router

================ Known issues =================
;Failed to mount /boot
;Failed systemd-timesyncd
;No internet access on individual nodes other than the net-boot node [SOLVED]
;The script dnsmasq.conf.save.hosts.auto.sh won't work for the first time. Boot it atleast 2 times for it to auto update the /etc/hosts file
;Stuck at boot - waiting for valid network [SOLVED] -> Chroot and set an arbitrary static ip address.

================ General notes and tips =================
;[ NOTE ] If you rsync anytime other than start of clean image then purge all the un needed software by chrooting into the client
;[ TIP ] Log monitoring: sudo journalctl
;[ TIP ] STATUS of services:  sudo systemctl status dnsmasq.service
;[ TIP ] DNSMASQ monitoring:  sudo tail -F /var/log/daemon.log
;[ TIP ] Restarting services: sh ~/restartservices.sh
;[ TIP ] Clearing logs: sudo journalctl -m --vacuum-time=1s
;[ REFERENCE ] https://unix.stackexchange.com/questions/139513/how-to-clear-journalctl 


================= Files to edit when u change the rpi or anything ======
sudo nano /etc/dnsmasq.conf
sudo nano /etc/exports
sudo nano /tftpboot/[MAC ADDRESS]/cmdline.txt 
        OR
sudo nano /tftpboot/cmdline.txt
sudo nano /nfs/node1/etc/fstab

sudo tail -F /var/log/daemon.log
